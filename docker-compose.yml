version: "3.8"

services:

  #----Gateway----
  gateway:
    build: ./services/Gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_URL=http://eureka:8761/eureka
    networks:
      - net

  #----Eureka----
  eureka:
    container_name: eureka
    build: ./services/Eureka
    ports:
      - "8761:8761"
    networks:
      - net

  #----Schedule----
  schedule-service:
    restart: always
    build:
      context: ./services/schedule/
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          memory: 64M
    links:
      - mongo
    depends_on:
      - mongo
      - eureka
    networks:
      - net

  #-------Sitter------
  sitter-service:
    container_name: Sitter-service
    build:
      context: ./services/SitterProfile
      dockerfile: Dockerfile
    image: sitterserviceapi:1
    restart: always
    hostname: sitterserviceapi
    networks:
      - net
    depends_on:
      - mongo
      - eureka
      - gateway

  #----Parent----
  parent-profile-service:
    container_name: Parent-Profile-Service
    build:
      context: ./services/parent-profile-service
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          memory: 64M
    image: parentprofileserviceapi:1
    restart: always
    hostname: parent-profile-service
    networks:
      - net
    depends_on:
      - mongo
      - eureka
      - gateway

  #----Sitter Auth----
  sitter-auth-service:
    build: ./services/SitterAuth
    depends_on:
      - eureka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/SitterDB
      - EUREKA_URL=http://eureka:8761/eureka
    networks:
      - net

  #----Parent Auth----
  parent-auth-service:
    build: ./services/ParentAuth
    depends_on:
      - eureka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/ParentProfileDB
      - EUREKA_URL=http://eureka:8761/eureka
    networks:
      - net

  # #----Email----
  email_service:
    container_name: email_service
    build: ./services/email
    environment:
      - SENDER=terrence.macgyver62@ethereal.email
      - SENDER_PASSWORD=k5jY36pyhuPGUweXTE8G7ZDJKx5N7teXsXXc
      - KAFKA_HOST=broker:9092
      - EMAIL_TOPIC=email
    depends_on:
      - broker
    networks:
      - net

  #----Kafka----
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2081
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - net

  broker:
    container_name: broker
    image: confluentinc/cp-kafka:7.3.0
    environment:
      - KAFKA_BROKER_ID:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2081
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - net

  #----Mongo----
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          memory: 64M
    volumes:
      - ${HOST_PATH}\data://data/db
    ports:
      - "8989:27017"
    networks:
      - net

networks:
  net:
    driver: bridge